<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>obj_overworldVital</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create Mouse
instance_create(x,y,obj_camera)

//Create HUD Buttons
global.inMenu = false
global.subTab = -4
global.menuSheet = -4

i = instance_create(40,-10,obj_topButton)
i.image_index = 0
//i = instance_create(80,-10,obj_topButton)
//i.image_index = 1
//i = instance_create(120,-10,obj_topButton)
//i.image_index = 2

//World Control
scr_worldControlInitialize()

//Create the Nodes
mapWidth = room_width/100
mapHeight = room_height/100
hover = noone

worldGen()

alarm[1] = 100

global.activeActor = noone

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Temp Populate
with(obj_worldTile)
{
    if random(100) &lt; 5 &amp;&amp; sprite_index != spr_deeps &amp;&amp; sprite_index != spr_water &amp;&amp; overlay != spr_mountain
    {
        ii = instance_create(x,y,obj_travelNode)
        ii.tile = id
        
        if random(100) &lt; 20
        {
            i = instance_create(x,y,obj_party)
            i.node = ii
            i.depth = ii.depth-1
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Update Visible Tiles
if obj_camera.x != obj_camera.xprevious or obj_camera.y != obj_camera.yprevious
{
    worldScrollVis()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Temp Hover
hover = instance_nearest(mouse_x,mouse_y,obj_worldTile)

if keyboard_check_pressed(global.centerKey)
{
    obj_camera.x = global.activeActor.x
    obj_camera.y = global.activeActor.y
    view_xview = median(obj_camera.x-(view_wview/2),0,room_width-view_wview)
    view_yview = median(obj_camera.y-(view_hview/2),0,room_height-view_hview)
}

if keyboard_check_pressed(vk_escape)
{
    scr_inGameMenu()
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(hover)
{
    with(hover)
    {
        draw_text(x,y+20,string(mapX)+', '+string(mapY))
        //draw_text(x,y+100,string(hX)+' hX') 
        //draw_text(x,y+120,string(hY)+' hY') 
        draw_text(x,y+40,string_format(height-10,2,0)+' Metres above Sealevel') 
        draw_text(x,y+60,string_format(humidity,2,0)+' Metres Rainfall')
        draw_text(x,y+80,string_format(temprature,2,0)+' Celsius')
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
