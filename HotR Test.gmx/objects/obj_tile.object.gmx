<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_terrain</parentName>
  <maskName>spr_metremask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Adjacency
adjacent = ds_list_create()
walk = ds_list_create()

//Movement
pathable = true
ground = true
cost = 1

//Details
occupant = noone
heightMap = random(165)

//Pathing
overlay = 0
onPath = false
g = 0
h = 0
move = false
rangedAttack = false
meleeAttack = false
pathParent = noone
zoneControl = false
threatened = false

//Coordinates
isoX = 0
isoY = 0
isoZ = 0

//Walls (NESW)
wall[0] = noone
wall[1] = noone
wall[2] = noone
wall[3] = noone

//Visuals
image_index = random(16)
image_speed = 0
vis = false
scrollVis = false

//Temp
alarm[0] = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(adjacent)
ds_list_destroy(walk)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depthCheck(10)

//Temp Random Walling
if ground = true
{
    if irandom(100) &lt; 20
    {    
        sprite_index = spr_mudTile
        cost = 1.5
    }
}
else
{
    //Clear Up Grid
    instance_deactivate_object(id)
}
//adjacency()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if isoZ &lt;= global.zLevel or global.zViewToggle = true
{
    if vis != false and scrollVis != false
    {
        shader_set(global.shader)
        if vis = 2
        {
            shader_set(shd_greyscale)
        }
        draw_sprite(sprite_index,image_index,x,y-h+(global.zLevel*30))
        shader_reset()
        
        if (global.zLevel = isoZ and overlay != 0) || onPath &gt;= 4
        {
            draw_sprite(spr_tilePathing,max(overlay,onPath),x,y-h+(global.zLevel*30))
        }
        //if zoneControl = true 
        //{
        //    draw_sprite(spr_enemyselect,0,x,y)
        //}
    }
    else
    {
        draw_sprite_ext(sprite_index,image_index,x,y-h+(global.zLevel*30),1,1,0,c_black,1)
    }
}

if obj_control.cHover = id
{
    draw_text(x,y-100,depth)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
