<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100000</depth>
  <persistent>0</persistent>
  <parentName>obj_combatHUD</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>size = 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Initiative Portrait
ix = x + view_xview[]
iy = y + view_yview[]

if owner.team = 1
{
    draw_set_colour(c_green)
}
else
{
    draw_set_colour(c_red)
}
draw_rectangle(ix-(size*6),iy-(size*6),ix+(size*6),iy+(size*6),false)

if owner.vis = true
{
    humanoidPortrait(owner,ix,iy,size)
}
else
{
    draw_set_font(fnt_small)
    draw_set_halign(fa_middle)
    draw_set_valign(fa_middle)
    drawText(c_black,c_yellow,ix,iy,'?')
}

draw_set_colour(c_black)
if instance_exists(obj_control.cHover)
{
    if obj_control.cHover.occupant = owner and obj_control.cHover.occupant.vis = true
    {
        draw_set_colour(c_yellow)
    }
}
draw_rectangle(ix-(size*6),iy-(size*6),ix+(size*6),iy+(size*6),true)

if order != 0
{
    draw_set_font(fnt_tiny)
    draw_set_halign(fa_middle)
    draw_set_valign(fa_middle)
    drawText(c_black,c_white,ix,iy+20,string_format(delay,2,1))
}
else
{
    draw_set_font(fnt_small)
    draw_set_halign(fa_left)
    draw_set_valign(fa_middle)
    drawText(c_black,c_white,ix-20,iy+30,owner.name)
    draw_set_font(fnt_tiny)
    drawText(c_black,c_white,ix-20,iy+42,string(owner.race)+" "+string(owner.class))

    drawText(c_black,c_white,ix-20,iy+54,'Suppression: '+string(owner.suppression))
    drawText(c_black,c_white,ix-20,iy+66,'Stamina: '+string(owner.stm))
    drawText(c_black,c_white,ix-20,iy+78,'On Hit Procs: '+string(owner.onHitSize))

    /*Temp    
    drawText(c_black,c_white,ix-20,iy+54,"Might - "+string(owner.might))
    drawText(c_black,c_white,ix-20,iy+66,"Grace - "+string(owner.grace))
    drawText(c_black,c_white,ix-20,iy+78,"Cunning - "+string(owner.cunning))
    

    drawText(c_black,c_white,ix-20,iy+90,"Will "+string(owner.will))
    drawText(c_black,c_white,ix-20,iy+102,"Fellowship "+string(owner.fellowship))

    drawText(c_black,c_white,ix-20,iy+126,"Movement "+string_format(owner.movement,2,1))
    drawText(c_black,c_white,ix-20,iy+138,"Haste "+string_format(owner.haste,2,2))
    */
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
