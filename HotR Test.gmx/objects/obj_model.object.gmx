<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_selection</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-151</depth>
  <persistent>0</persistent>
  <parentName>obj_hudParent</parentName>
  <maskName>spr_largemask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize()

//Animation and Drawing (Temp)
humanoid(0)

//Effects
status = ds_list_create()

//Game Attributes
initializeCharStats()

mode = 1

//Grid
isoX = 1
isoY = 1
isoZ = 0
isoTile = noone

//Move
canMove = true
canAct = true
isMoving = false

//Facing
hFacing = 1
vFacing = 0
facing = 0

//Lifebar
lifeVis = life
regenTime = 0

//AI Core
player = true
team = 1
actionString = "Idle"
action = actIdle
active = true

controlled = false

//Control
rangeAttack = false
greatWeapon = true
dualWield = false
reach = 1.5

//Pathing
pathArray[0] = isoTile
pathLength = 0
moveStep = 0
moveDur = 5
moveX = x
moveY = y
moveZ = 0

//Visuals
h = 0
vis = false

//Test
legMult = 1
legSprt = 0
sX = 2
target = -4

for(i = 0; i &lt;= 7; i++)
{
    tt[i,0] = -1
    ttText[i,0] = ''
    ttLength[i,0] = 1
    tt[i,1] = -1
    ttText[i,1] = ''
    ttLength[i,1] = 1
}

global.zLevel = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Off Arm Animation Continue
script_execute(animIndex[2],2,animStep[2])
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Main Arm Animation Continue
script_execute(animIndex[1],1,animStep[1])
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Leg Animation Continue
script_execute(animIndex[0],animStep[0])
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Facing
facing = 0

ix = 120+view_xview[]
iy = 222+view_yview[]

for(i = 0; i &lt;= 7; i++)
{
    if point_in_rectangle(mouse_x,mouse_y,ix,iy+1,ix+100,iy+11) and global.drag = false and global.eventActive = false
    {
        tt[i,0] = min(tt[i,0]+(4/global.fspd),1)
    }
    else
    {
        tt[i,0] = max(tt[i,0]-(8/global.fspd),-1)    
    }
    
    if point_in_rectangle(mouse_x,mouse_y,ix+100,iy+1,ix+200,iy+11) and global.drag = false and global.eventActive = false
    {
        tt[i,1] = min(tt[i,1]+(4/global.fspd),1)
    }
    else
    {
        tt[i,1] = max(tt[i,1]-(8/global.fspd),-1)    
    }
    iy += 12
    
    if tt[i,1] != 0 or  tt[i,0] != 0
    {
    depth = -201
    }
    else
    {
    depth = -151
    }
}



/*
facing = round(point_direction(x,y,mouse_x,mouse_y)/45)*45


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(vk_alt) and global.charTab = tab
{
    //Facing
    moveX = mouse_x
    moveY = mouse_y
    moveZ = 0
    
    //Horizontal Facing
    if moveX &gt; x
        hFacing = 1
    if moveX &lt; x
        hFacing = -1
        
    //Vertical Facing
    if moveY &gt; y
        vFacing = 0
    if moveY &lt; y
        vFacing = 1
        
    //Facing
    facing = round(point_direction(x,y,moveX,moveY)/45)*45
    
    //Mode
    if keyboard_check_pressed(ord('Q'))
    {mode = 1}
    if keyboard_check_pressed(ord('W'))
    {mode = 2}
    if keyboard_check_pressed(ord('E'))
    {mode = 3}
    if keyboard_check_pressed(ord('R'))
    {mode = 4}
    if keyboard_check_pressed(ord('T'))
    {mode = 5}
    
    if keyboard_check_pressed(ord('K'))
    {
    hipsImage += 2
        if hipsImage  &gt; 6
        {
            hipsImage = 0
        }
    }
    
    if keyboard_check_pressed(ord('L'))
    {
    bodyImage += 2
        if bodyImage  &gt; 4
        {
            bodyImage = 0
        }
    }
    
    //Adjustments
    if keyboard_check_pressed(vk_left)
    {
        switch(mode)
        {
        case 1: headAdjust -= 1 break
        case 2: chstAdjust -= 1 break
        case 3: bodyAdjust -= 1 break
        }
    }
    
    if keyboard_check_pressed(vk_right)
    {
        switch(mode)
        {
        case 1: headAdjust += 1 break
        case 2: chstAdjust += 1 break
        case 3: bodyAdjust += 1 break
        }
    }
    
    if keyboard_check_pressed(vk_up)
    {
        switch(mode)
        {
        case 1: headOffset += 1 break
        case 3: bodyOffset += 1 break
        case 4: hipsOffset += 1 legAdjust[1] += 1 legAdjust[2] += 1  break
        case 5: hipsOffset += 1 break
        }
    }
    
    if keyboard_check_pressed(vk_down)
    {
        switch(mode)
        {
        case 1: headOffset -= 1 break
        case 3: bodyOffset -= 1 break
        case 4: hipsOffset -= 1 legAdjust[1] -= 1 legAdjust[2] -= 1 break
        case 5: hipsOffset -= 1 break
        }
    }

    if keyboard_check_pressed(ord('1'))
    {
        startAnimation(0,animThrust)
        startAnimation(1,script_execute(wepAnimType[1],1))
    }
    if keyboard_check_pressed(ord('2'))
    {
        startAnimation(0,animFlinch)
    }
    if keyboard_check_pressed(ord('3'))
    {
        startAnimation(0,animDodge)
    }
    if keyboard_check_pressed(ord('4'))
    {
        startAnimation(0,animDown)
    }
    if keyboard_check_pressed(ord('5'))
    {
        startAnimation(1+hasShield,animBlock)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Self
if global.charTab = tab
{
    x = xstart+view_xview[]
    y = ystart+view_yview[]
    
    script_execute(animType,1)
        
    draw_set_valign(fa_middle)
    draw_set_halign(fa_center)
    if string_width(string(global.charSelect.firstName)+' '+string(global.charSelect.lastName)) &lt; 200
    {
    draw_set_font(fnt_main)
    }
    else
    {
    draw_set_font(fnt_small)
    }
    draw_set_colour(c_black)
    draw_text(x,y-150,string(global.charSelect.firstName)+' '+string(global.charSelect.lastName))
    draw_set_font(fnt_small)
    draw_text(x,y-130,'Level '+string(global.charSelect.level)+' '+string(global.charSelect.raceName)+' '+string(global.charSelect.className))
    draw_set_font(fnt_tinyText)
    
    draw_set_colour(make_colour_rgb(128,0,25))
    draw_rectangle(x-50,y-120,x-50+(100*(global.charSelect.experience/global.charSelect.expToLevel)),y-115,false)

    draw_set_colour(c_black)
    draw_rectangle(x-50,y-120,x+50,y-115,true)
    
    if global.charSelect.levelPending != 0{draw_text(x+55,y-117,'+')}
    draw_text(x,y-105,string_format(global.charSelect.experience,2,1)+' / '+string(global.charSelect.expToLevel))
    
    ix = 120+view_xview[]
    iy = 210+view_yview[]
    ii = 0
    script_execute(global.charInfo1)
    
    ix = 220+view_xview[]
    iy = 210+view_yview[]
    ii = 1
    script_execute(global.charInfo2)
    
    for(i = 0; i &lt;= 7; i++)
    {
        if tt[i,0] &gt; 0 and ttText[i,0] != ''
        {
            charInfoTooltip(200,222+(i*12),ttText[i,0],ttLength[i,0],tt[i,0])
        }
        if tt[i,1] &gt; 0 and ttText[i,1] != ''
        {
            charInfoTooltip(300,222+(i*12),ttText[i,1],ttLength[i,1],tt[i,1])
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(vk_alt) and global.charTab = tab
{
draw_line(x+14,y,x+15,y-height*sX)
draw_line(x+10,y-height*sX,x+15,y+1-(height*sX))
draw_line(x+10,y,x+15,y+1)

//Draw UI
draw_set_font(fnt_dev)
draw_set_halign(fa_left)
draw_set_valign(fa_middle)
draw_set_colour(c_white)
draw_text(x+18,y-8,"R: "+string(race))
draw_text(x+18,y-16,"GW: "+string(greatWeapon))
draw_text(x+18,y-24,"H: "+string(height)+"px - "+string(height*6)+"cm")

switch(mode)
{
    case 1:
    draw_text(x+18,y-32,"Head Off: "+string(headOffset))
    draw_text(x+18,y-40,"Head Adj: "+string(headAdjust))
    draw_text(x+18,y-48,"Body: "+string(bodyImage))
    break
    
    case 2:
    draw_text(x+18,y-32,"Chest Adj: "+string(chstAdjust))
    draw_text(x+18,y-40,"Chest: "+string(chstImage))
    break
    
    case 3:
    draw_text(x+18,y-32,"Body Off: "+string(bodyOffset))
    draw_text(x+18,y-40,"Body Adj: "+string(bodyAdjust))
    draw_text(x+18,y-48,"Body: "+string(bodyImage))
    draw_text(x+18,y-56,"Hips: "+string(hipsImage))
    draw_text(x+18,y-64,"Chest: "+string(chstImage))
    break
    
    case 4:
    draw_text(x+18,y-32,"Leg Adj: "+string(legAdjust[1]))
    draw_text(x+18,y-40,"Hips: "+string(hipsImage))
    draw_text(x+18,y-48,"Skirt: "+string(skrtSize))
    break
    
    case 5:
    draw_text(x+18,y-32,"Hips Off: "+string(hipsOffset))
    break
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Do Nothing
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
