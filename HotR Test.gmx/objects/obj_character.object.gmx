<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_char</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_solid</parentName>
  <maskName>spr_largemask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_initialize()

//Temp
image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Off Arm Animation Continue
script_execute(animIndex[2],2,animStep[2])
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Main Arm Animation Continue
script_execute(animIndex[1],1,animStep[1])
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Leg Animation Continue
script_execute(animIndex[0],animStep[0])
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Upkeep

//TEMP
//Reattempt pathfinding to fix any errors or adjust to changes

//Make a path
moveX = path_get_point_x(myPath,path_get_number(myPath))
moveY = path_get_point_y(myPath,path_get_number(myPath))

//Make a path
mp_grid_path(global.grid,myPath,x,y,moveX,moveY,true)

//Set destination to last visible area on path
var ii = 0
repeat(path_get_number(myPath))
{
    if !collision_line(x,y,path_get_point_x(myPath,ii),path_get_point_y(myPath,ii),obj_terrain,false,true) 
    {
    moveX = path_get_point_x(myPath,ii)
    moveY = path_get_point_y(myPath,ii)
    moveStep = ii
    }
ii += 1
}
alarm[0] = global.fspd

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Movement and Control
script_execute(controlScript)
scr_personalspace()
scr_movestep()
script_execute(action,0)

//Depth
depth = -y

//Visualize life changes
lifeVis += (life-lifeVis)/(global.fspd/5)

//Regenerate life
regenTime += lifeRegen/(global.fspd*5)

if regenTime &gt;= 1
{
    if life &lt; lifeMax
    {
    life += 1
    }
    regenTime -= 1
}

//Attack
atkTime += atkHaste/(global.fspd)

//Life
if life &gt; lifeMax
{
    life = lifeMax
    active = true
}
else if life &lt; 0
{
    life = 0
    active = false
}



//Temp
if keyboard_check_pressed(ord('V')) and controlled = true
{
    anim_start(1,choose(anim_downSwing,anim_crossSwing))
}

if keyboard_check_pressed(vk_right)-keyboard_check_pressed(vk_left) != 0 and controlled = true
{
    i = choose(1,1,1,2,2)
    life += i*(keyboard_check_pressed(vk_right)-keyboard_check_pressed(vk_left))

    ii = instance_create(x,y-h-height,obj_descriptor)
    ii.text = i
    ii.font = fnt_tiny
    
    if keyboard_check_pressed(vk_right)-keyboard_check_pressed(vk_left) &gt; 0
    {
    ii.colour1 = c_green
    ii.colour2 = c_white  
    }
    else
    {
    ii.colour1 = dkRed
    ii.colour2 = c_red  
    }
}

if keyboard_check_pressed(vk_up)-keyboard_check_pressed(vk_down) != 0 and controlled = true
{
    i = choose(3,4,5,6,7,8,9,10)
    life += i*(keyboard_check_pressed(vk_up)-keyboard_check_pressed(vk_down))
    
    ii = instance_create(x,y-h-height,obj_descriptor)
    ii.text = i
    
    if keyboard_check_pressed(vk_up)-keyboard_check_pressed(vk_down) &gt; 0
    {
    ii.colour1 = c_green
    ii.colour2 = c_white  
    }  
}

if controlled = true
{
    lifeMax += 4*(keyboard_check_pressed(ord('Q'))-keyboard_check_pressed(ord('E')))
    vit += 1*(keyboard_check_pressed(ord('R'))-keyboard_check_pressed(ord('T')))
    stm += 1*(keyboard_check_pressed(ord('F'))-keyboard_check_pressed(ord('G')))
    mor += 1*(keyboard_check_pressed(ord('V'))-keyboard_check_pressed(ord('B')))
}


//Arm Adjust Temp
armMax += keyboard_check_pressed(ord('Y'))-keyboard_check_pressed(ord('U'))
arm += keyboard_check_pressed(ord('Y'))-keyboard_check_pressed(ord('U'))
arm += keyboard_check_pressed(ord('H'))-keyboard_check_pressed(ord('J'))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//UI
if controlled = true
{
    draw_set_colour(c_green)
    draw_circle(round(x-1),round(y-fh),size,true)
}

//Draw Self
script_execute(animType,1)

//Temp UI
if controlled = true
{
    draw_medHealthbar()
    //draw_text(x,y-60,string(animStep[0])+" "+string(alarm[5]))
    //draw_text(x,y-70,string(bodyHFacing)+" "+string(hFacing))
    //draw_text(x,y-80,hFacing)
    
    //draw_bossHealthbar()
    //draw_text(x,y-90,"Vitality: "+string(vit)+" / "+string(vitMax))
    //draw_text(x,y-80,"Stamina: "+string(stm)+" / "+string(stmMax))
    //draw_text(x,y-70,"Morale: "+string(mor)+" / "+string(morMax))
    //scr_personalspace_draw()
}
    //bodyFacing = 15*round(point_direction(x,y,mouse_x,mouse_y)/15)
    //draw_arrow(x,y,x+lengthdir_x(10,bodyFacing),y+lengthdir_y(10,bodyFacing),5)
    //draw_path(myPath,x,y,true)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
